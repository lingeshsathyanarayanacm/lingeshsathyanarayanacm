name: Generate Snake

on:
  schedule:
    # Trigger every 12 hours
    - cron: "0 */12 * * *"
  workflow_dispatch:  # Manually trigger the action
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04  # Use the latest Ubuntu version

    steps:
      # Step 1: Set up Git configuration
      - name: Set up Git
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "your-email@example.com"

      # Step 2: Clone the repository
      - name: Clone repo
        uses: actions/checkout@v3

      # Step 3: Generate the snake GIF and SVG files
      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: List files in dist to verify output
      - name: List files in dist/
        run: |
          echo "Listing files in the dist directory:"
          ls -alh dist/

      # Step 5: Check if there are any changes to commit
      - name: Check for changes
        run: |
          git diff --exit-code || echo "Changes detected in the dist folder."

      # Step 6: Check the status of the repository
      - name: Show git status
        run: git status

      # Step 7: Retry git push (in case of transient issues)
      - name: Retry pushing changes to the output branch
        run: |
          git fetch origin output || git checkout -b output  # Ensure 'output' branch exists
          git add dist/*
          git commit -m "Update snake animations" || echo "No changes to commit"
          git push --set-upstream origin output || (sleep 10 && git push --set-upstream origin output)

      # Step 8: Ensure the output branch is up to date
      - name: Ensure output branch exists and is up to date
        run: |
          git fetch origin output
          git checkout output
          git pull origin output

      # Step 9: Push new files to the output branch using GitHub Pages action
      - name: Push new files to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
          commit_message: Update snake animations
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 10: Debugging - show the commit log after pushing
      - name: Show git log
        run: git log --oneline --max-count=5

      # Step 11: Display success message
      - name: Build completed successfully
        run: echo "Snake GIF and SVG files successfully pushed to the output branch."
